{"version":3,"file":"node-win-wallpaper.cjs.production.min.js","sources":["../lib/index.ts"],"sourcesContent":["import bindings from 'bindings';\r\nimport path from 'path';\r\n\r\nconst nodeWinWallpaper: {\r\n    moveWindow(handle: Buffer, x: number, y: number, width: number, height: number): boolean;\r\n    attachWindow(handle: Buffer): void;\r\n} = bindings({\r\n    // Workaround for webpack/electronforge shenanigans\r\n    // eslint-disable-next-line @typescript-eslint/camelcase\r\n    module_root: path.resolve(path.join(__dirname, '../')),\r\n    bindings: 'node-win-wallpaper'\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n} as any as string);\r\n\r\n\r\nexport interface Rectangle {\r\n    /**\r\n     * The height of the rectangle (must be an integer).\r\n     */\r\n    height: number;\r\n    /**\r\n     * The width of the rectangle (must be an integer).\r\n     */\r\n    width: number;\r\n    /**\r\n     * The x coordinate of the origin of the rectangle (must be an integer).\r\n     */\r\n    x: number;\r\n    /**\r\n     * The y coordinate of the origin of the rectangle (must be an integer).\r\n     */\r\n    y: number;\r\n}\r\n\r\nexport default {\r\n    moveWindow: function(handle: Buffer, {x, y, width, height}: Rectangle): boolean {\r\n        return nodeWinWallpaper.moveWindow(handle, x, y, width, height);\r\n    },\r\n    attachWindow: function(handle: Buffer): void {\r\n        return nodeWinWallpaper.attachWindow(handle);\r\n    }\r\n};\r\n"],"names":["nodeWinWallpaper","bindings","module_root","path","resolve","join","__dirname","moveWindow","handle","x","y","width","height","attachWindow"],"mappings":"4LAGMA,EAGFC,EAAS,CAGTC,YAAaC,EAAKC,QAAQD,EAAKE,KAAKC,UAAW,QAC/CL,SAAU,uCAwBC,CACXM,WAAY,SAASC,YACVR,EAAiBO,WAAWC,IADDC,IAAGC,IAAGC,QAAOC,SAGnDC,aAAc,SAASL,UACZR,EAAiBa,aAAaL"}